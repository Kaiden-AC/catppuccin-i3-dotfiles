# ~/.config/picom/picom.conf
# Picom configuration with Catppuccin Mocha considerations

# --- General Settings ---
backend = "glx";         # "xrender" or "glx". GLX recommended for blur/animations.
vsync = true;            # Enable vsync to prevent screen tearing.

# --- Shadows ---
shadow = true;           # Enabled client-side shadows on windows.
shadow-radius = 12;      # The blur radius for shadows. (Higher => softer)
shadow-offset-x = -15;   # The left offset for shadows.
shadow-offset-y = -15;   # The top offset for shadows.
shadow-opacity = 0.6;    # The translucency for shadows. (0.0 - 1.0)
# shadow-red = 0.0;      # Red color value of shadow (0.0 - 1.0)
# shadow-green = 0.0;    # Green color value of shadow
# shadow-blue = 0.0;     # Blue color value of shadow
shadow-exclude = [       # Exclude conditions for shadows.
  "name = 'Notification'", # Dunst notifications
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'", # Fxcluded for region select tools.
  "class_g = 'Polybar'", # Don't put shadows on Polybar
  "_GTK_FRAME_EXTENTS@:c" # Exclude shadows on Gtk frames
];
# shadow-ignore-shaped = false; # Avoid drawing shadows on shaped windows.

# --- Fading ---
fading = true;           # Fade windows during opacity changes.
fade-delta = 4;          # Opacity change between steps while fading in. (Higher = faster)
fade-in-step = 0.03;     # Opacity change step while fading in.
fade-out-step = 0.03;    # Opacity change step while fading out.
# no-fading-openclose = false; # Fade windows in/out when opening/closing.
# no-fading-destroyed-argb = false; # Don't fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.

# --- Opacity ---
# inactive-opacity = 0.9; # Default opacity of inactive windows. (0.0 - 1.0) requires `inactive-opacity-override`
# active-opacity = 1.0;   # Default opacity for active windows. (0.0 - 1.0)
# frame-opacity = 1.0;    # Opacity of window titlebars and borders. (0.1 - 1.0)
# inactive-opacity-override = false; # Let inactive opacity set by -i override the active window opacity.
# focus-exclude = [ "class_g = 'Cairo-clock'" ]; # Exclude conditions for focus tracking.

# Opacity rules
opacity-rule = [
  "90:class_g = 'Alacritty' && !focused", # Slightly transparent unfocused terminal
  "100:class_g = 'Alacritty' && focused",
  # Add other rules here, e.g.:
  "95:class_g = 'Thunar'",
  "100:class_g = 'firefox'",
  "90:class_g = 'Polybar'" # Set transparency for polybar if pseudo-transparency isn't enough
];

# --- Blur ---
# Requires glx backend and experimental-backends = true;
# blur-method = "dual_kawase"; # "none", "gaussian", "box", "kernel", "dual_kawase" (Performance intensive)
# blur-strength = 5;         # Blur strength for dual_kawase/gaussian.
# blur-background = true;
# blur-background-frame = false;
# blur-background-fixed = false;
blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'slop'",
  "_GTK_FRAME_EXTENTS@:c"
];

# --- Corners ---
corner-radius = 8;      # Radius of rounded corners. Set to 0 to disable.
round-borders = 1;       # Radius of rounded borders. Set to 0 to disable.
rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'Polybar'", # Don't round Polybar corners if it handles its own
];

# --- Other ---
# daemon = false;        # Daemonize process. Fork to background.
# dbus = false;          # Enable remote control via D-Bus. See man page for details.
mark-wmwin-focused = true; # Try to detect WM windows and mark them as active.
mark-ovredir-focused = true; # Mark override-redirect windows that doesn't have a WM frame as active.
detect-rounded-corners = true; # Detect rounded corners and adjust saving rectangular areas.
detect-client-opacity = true; # Detect _NET_WM_OPACITY on client windows, useful for window managers not supporting it.
detect-transient = true; # Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-client-leader = true; # Use WM_CLIENT_LEADER to group windows.
use-damage = true;      # Use damage information from the X server to automatically detect screen changes. Recommended. Reduces CPU usage.
log-level = "warn";     # "debug", "info", "warn", "error"
# log-file = "/path/to/your/log/file"; # Specify a file to log to.

# Window type settings
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.85; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.9; shadow = true; } # Slightly transparent menus
  dropdown_menu = { opacity = 0.9; shadow = true; }
  utility = { focus = true; }
};

# Experimental backends (needed for blur)
experimental-backends = true;
